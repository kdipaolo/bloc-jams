{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/min/album-min.js","app/scripts/min/app-min.js","app/scripts/min/profile-min.js","app/scripts/profile.js"],"names":[],"mappingsztWA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","file":"public/javascripts/app.js","sourcesContent":[" // Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n \n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n \nvar currentlyPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n   var template =\n       '<tr>'\n     + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n     + '  <td class=\"col-md-9\">' + songName + '</td>'\n     + '  <td class=\"col-md-2\">' + songLength + '</td>'\n     + '</tr>'\n     ;\n \n   var $row = $(template);\n \n // Change from a song number to play button when the song isn't playing and we hover over the row.\n   var onHover = function(event) {\n     var songNumberCell = $(this).find('.song-number');\n     var songNumber = songNumberCell.data('song-number');\n    if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n    }\n   };\n  // Change from a play button to song number when the song isn't playing and we hover off the row.\n   var offHover = function(event) {\n     var songNumberCell = $(this).find('.song-number');\n      if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html(songNumber);\n    }\n   };\n\n   // Toggle the play, pause, and song number based on the button clicked.\n   var clickHandler = function(event) {\n     var songNumber = $(this).data('song-number');\n \n       if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       var currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n \n    $row.find('.song-number').click(clickHandler);\n   $row.hover(onHover, offHover);\n   return $row;\n };\n \n\n\n var changeAlbumView = function(album) {\n   // Update the album title\n   var $albumTitle = $('.album-title');\n   $albumTitle.text(album.name);\n \n   // Update the album artist\n   var $albumArtist = $('.album-artist');\n   $albumArtist.text(album.artist);\n \n   // Update the meta information\n   var $albumMeta = $('.album-meta-info');\n   $albumMeta.text(album.year + \" on \" + album.label);\n \n   // Update the album image\n   var $albumImage = $('.album-image img');\n   $albumImage.attr('src', album.albumArtUrl);\n \n   // Update the Song List\n   var $songList = $(\".album-song-listing\");\n   $songList.empty();\n   var songs = album.songs;\n   for (var i = 0; i < songs.length; i++) {\n     var songData = songs[i];\n     var $newRow = createSongRow(i + 1, songData.name, songData.length);\n     $songList.append($newRow);\n   }\n \n };\n\n\n\n var updateSeekPercentage = function($seekBar, event) {\n   var barWidth = $seekBar.width();\n   var offsetX = event.pageX - $seekBar.offset().left;\n \n   var offsetXPercent = (offsetX  / barWidth) * 100;\n   offsetXPercent = Math.max(0, offsetXPercent);\n   offsetXPercent = Math.min(100, offsetXPercent);\n \n   var percentageString = offsetXPercent + '%';\n   $seekBar.find('.fill').width(percentageString);\n   $seekBar.find('.thumb').css({left: percentageString});\n }\n\n var setupSeekBars = function() {\n \n   $seekBars = $('.player-bar .seek-bar');\n   $seekBars.click(function(event) {\n     updateSeekPercentage($(this), event);\n   });\n  \n  $seekBars.find('.thumb').mousedown(function(event){\n    var $seekBar = $(this).parent();\n    $seekBar.addClass('no-animate');\n \n    $(document).bind('mousemove.thumb', function(event){\n      updateSeekPercentage($seekBar, event);\n    });\n \n    //cleanup\n    $(document).bind('mouseup.thumb', function(){\n      $seekBar.addClass('no-animate');\n      $(document).unbind('mousemove.thumb');\n      $(document).unbind('mouseup.thumb');\n    });\n \n  });\n };\n\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-Album view pages.\n//  - Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n // Wait until the HTML is fully processed.\n $(document).ready(function() {\n   changeAlbumView(albumPicasso)\n   setupSeekBars();\n });\n}"," //require('./landing');\n //require('./album');\n //require('./collection');\n //require('./profile');\n\n // Example album.\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n\n   songs: [\n    { name: 'Blue', length: 163.38, audioUrl: '/music/placeholders/blue' },\n    { name: 'Green', length: 105.66 , audioUrl: '/music/placeholders/green' },\n    { name: 'Red', length: 270.14, audioUrl: '/music/placeholders/red' },\n    { name: 'Pink', length: 154.81, audioUrl: '/music/placeholders/pink' },\n    { name: 'Magenta', length: 375.92, audioUrl: '/music/placeholders/magenta' }\n   ]\n };\n \n \n\n\n var blocJams = angular.module('BlocJams', ['ui.router']);\n\n\n\n blocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n   $locationProvider.html5Mode(true);\n\n   $stateProvider.state('collection', {\n     url: '/collection',\n     controller: 'Collection.controller',\n     templateUrl: '/templates/collection.html'\n   });\n\n   $stateProvider.state('landing', {\n     url: '/',\n     controller: 'Landing.controller',\n     templateUrl: '/templates/landing.html'\n   });\n\n   $stateProvider.state('song', {\n     url: '/song',\n     templateUrl: '/templates/song.html'\n   });\n\n   $stateProvider.state('album', {\n     url: '/album',\n     templateUrl: '/templates/album.html',\n     controller: 'Album.controller'\n   });\n\n }]);\n\n\n blocJams.controller('Landing.controller', ['$scope', function($scope) {  \n  $scope.subText = \"Turn the music up!\";\n\n  $scope.subTextClicked = function() {\n    $scope.subText += '!';\n  };\n\n  $scope.albumURLs = [\n  '/images/album-placeholders/album-1.jpg',\n  '/images/album-placeholders/album-2.jpg',\n  '/images/album-placeholders/album-3.jpg',\n  '/images/album-placeholders/album-4.jpg',\n  '/images/album-placeholders/album-5.jpg',\n  '/images/album-placeholders/album-6.jpg',\n  '/images/album-placeholders/album-7.jpg',\n  '/images/album-placeholders/album-8.jpg',\n  '/images/album-placeholders/album-9.jpg'\n  ];\n}]);\n\n\n blocJams.controller('Song.controller', ['$scope', function($scope){\n   $scope.title = \"Song Template\";\n }])\n\n blocJams.controller('Collection.controller', ['$scope','SongPlayer', function($scope, SongPlayer) {\n\n   $scope.albums = [];\n\n   for (var i = 0; i < 33; i++) {\n     $scope.albums.push(angular.copy(albumPicasso));\n   } \n\n   $scope.playAlbum = function(album){\n     SongPlayer.setSong(album, album.songs[0]); // Targets first song in the array.\n   }\n }])\n\n blocJams.controller('Album.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n   $scope.album = angular.copy(albumPicasso);\n\n   var hoveredSong = null;\n\n\n   $scope.onHoverSong = function(song) {\n     hoveredSong = song;\n     console.log(\"on\");\n   };\n\n   $scope.offHoverSong = function(song) {\n     hoveredSong = null;\n     console.log(\"off\");\n   };\n\n\n   $scope.getSongState = function(song) {\n    if (song === SongPlayer.currentSong && SongPlayer.playing) {\n     return 'playing';\n   }\n   else if (song === hoveredSong) {\n     return 'hovered';\n   }\n   return 'default';\n };\n\n $scope.playSong = function(song) {\n  SongPlayer.setSong($scope.album, song);\n\n};\n\n$scope.pauseSong = function(song) {\n  SongPlayer.pause();\n};\n}]);\n\n blocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n   $scope.songPlayer = SongPlayer;\n\n\n  SongPlayer.onTimeUpdate(function(event, time){\n     $scope.$apply(function(){\n       $scope.playTime = time;\n     });\n   });\n \n\n }]);\n \n blocJams.service('SongPlayer', ['$rootScope', function($rootScope) {\n\n   var currentSoundFile = null;\n\n   var trackIndex = function(album, song) {\n     return album.songs.indexOf(song);\n   };\n\n   return {\n     currentSong: null,\n     currentAlbum: null,\n     playing: false,\n\n\n     play: function() {\n       this.playing = true;\n       currentSoundFile.play();\n     },\n     pause: function() {\n       this.playing = false;\n       currentSoundFile.pause();\n     },\n     next: function() {\n       var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n       currentTrackIndex++;\n       if (currentTrackIndex >= this.currentAlbum.songs.length) {\n         currentTrackIndex = 0;\n       }\n       var song = this.currentAlbum.songs[currentTrackIndex];\n       this.setSong(this.currentAlbum, song);\n     },\n     previous: function() {\n       var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n       currentTrackIndex--;\n       if (currentTrackIndex < 0) {\n         currentTrackIndex = this.currentAlbum.songs.length - 1;\n       }\n\n       var song = this.currentAlbum.songs[currentTrackIndex];\n       this.setSong(this.currentAlbum, song);\n     },\n      seek: function(time) {\n       // Checks to make sure that a sound file is playing before seeking.\n       if(currentSoundFile) {\n         // Uses a Buzz method to set the time of the song.\n         currentSoundFile.setTime(time);\n       }\n     },\n       onTimeUpdate: function(callback) {\n      return $rootScope.$on('sound:timeupdate', callback);\n    },\n     setSong: function(album, song) {\n       if (currentSoundFile) {\n        currentSoundFile.stop();\n      }\n      this.currentAlbum = album;\n      this.currentSong = song;\n\n      currentSoundFile = new buzz.sound(song.audioUrl, {\n        formats: [ \"mp3\" ],\n        preload: true\n      });\n\n     currentSoundFile.bind('timeupdate', function(e){\n        $rootScope.$broadcast('sound:timeupdate', this.getTime());\n      });\n  \n      this.play();\n    }\n  };\n}]);\n\n // blocJams.directive('clickme', function(){\n //  return {\n //    templateUrl: 'templates/directives/clickMe.html',\n //    replace: true,\n //    restrict: 'E',\n //    link: function(){\n\n //    }\n //  }\n // });\n\n\n blocJams.directive('slider', ['$document', function($document){\n\n\n\n  // Returns a number between 0 and 1 to determine where the mouse event happened along the slider bar.\n  var calculateSliderPercentFromMouseEvent = function($slider, event) {\n    var offsetX =  event.pageX - $slider.offset().left; // Distance from left\n    var sliderWidth = $slider.width(); // Width of slider\n    var offsetXPercent = (offsetX  / sliderWidth);\n    offsetXPercent = Math.max(0, offsetXPercent);\n    offsetXPercent = Math.min(1, offsetXPercent);\n    return offsetXPercent;\n  };\n\n    var numberFromValue = function(value, defaultValue) {\n     if (typeof value === 'number') {\n       return value;\n     }\n \n     if(typeof value === 'undefined') {\n       return defaultValue;\n     }\n \n     if(typeof value === 'string') {\n       return Number(value);\n     }\n   }\n \n\n  return {\n    templateUrl: '/templates/directives/slider.html',\n    replace: true,\n    restrict: 'E',\n      scope: {\n      onChange: '&'\n    },\n\n    link: function(scope, element, attributes) {\n      // These values represent the progress into the song/volume bar, and its max value.\n      // For now, we're supplying arbitrary initial and max values.\n      scope.value = 0;\n      scope.max = 100;\n      var $seekBar = $(element);\n      console.log(attributes);\n\n      attributes.$observe('value', function(newValue) {\n        scope.value = numberFromValue(newValue, 0);\n      });\n \n      attributes.$observe('max', function(newValue) {\n        scope.max = numberFromValue(newValue, 100) || 100;\n      });\n\n      var percentString = function () {\n        var value = scope.value || 0;\n        var max = scope.max || 100;\n        percent = value / max * 100;\n        return percent + \"%\";\n      };\n\n      scope.fillStyle = function() {\n        return {width: percentString()};\n      };\n\n      scope.thumbStyle = function() {\n        return {left: percentString()};\n      };\n\n      scope.onClickSlider = function(event) {\n        var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n        scope.value = percent * scope.max;\n        notifyCallback(scope.value);\n      };\n\n      scope.trackThumb = function() {\n        $document.bind('mousemove.thumb', function(event){\n        var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n        scope.$apply(function(){\n          scope.value = percent * scope.max;\n          notifyCallback(scope.value);\n        });\n      });\n\n      //cleanup\n      $document.bind('mouseup.thumb', function(){\n        $document.unbind('mousemove.thumb');\n        $document.unbind('mouseup.thumb');\n      });\n\n       // Place this as the last function defined in the 'link' function of the directive.\n       var notifyCallback = function(newValue) {\n         if(typeof scope.onChange === 'function') {\n           scope.onChange({value: newValue});\n         }\n       };\n\n    }; //ends link function\n  }}; //ends return\n\n}]);\n\n  blocJams.filter('timecode', function(){\n   return function(seconds) {\n     seconds = Number.parseFloat(seconds);\n \n     // Returned when no time is provided.\n     if (Number.isNaN(seconds)) {\n       return '-:--';\n     }\n \n     // make it a whole number\n     var wholeSeconds = Math.floor(seconds);\n \n     var minutes = Math.floor(wholeSeconds / 60);\n \n     remainingSeconds = wholeSeconds % 60;\n \n     var output = minutes + ':';\n \n     // zero pad seconds, so 9 seconds should be :09\n     if (remainingSeconds < 10) {\n       output += '0';\n     }\n \n     output += remainingSeconds;\n \n     return output;\n   }\n })"," var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n      + '  <div class=\"collection-album-image-container\">'\n      + '     <img src=\"/images/album-placeholder.png\"/>'\n      + ' </div>'\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '    </p>'\n      + '  </div>'\n      + '</div>';\n \n   return $(template);\n };\n\n var updateCollectionView = function() {\n   var $collection = $(\".collection-container .row\");\n   $collection.empty();\n \n   for (var i = 0; i < 33; i++) {\n     var $newThumbnail = buildAlbumThumbnail();\n     $collection.append($newThumbnail);\n   }\n   var onHover = function(event) {\n     $(this).append(buildAlbumOverlay(\"/album.html\"));\n   };\n        var offHover = function(event) {\n    $(this).find('.collection-album-image-overlay').remove();\n  };\n      $collection.find('.collection-album-image-container').hover(onHover, offHover);\n };\n \n if (document.URL.match(/\\/collection.html/)) {\n  // Wait until the HTML is fully processed.\n  $(document).ready(function() {\n    // Your code goes here.\n        updateCollectionView();\n\n  });\n}\n\n\n// below the buildAlbumThumbnail function\n\n  var buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n  };","  $(document).ready(function() { \n    \n    $('.hero-content h3').click(function(){\n      var subText = $(this).text();\n       $(this).text(subText + \"!\");\n    });\n \n   var onHoverAction = function(event) {\n     console.log('Hover action triggered.');\n     $(this).animate({'margin-top': '10px'});\n   };\n \n   var offHoverAction = function(event) {\n     console.log('Off-hover action triggered.');\n     $(this).animate({'margin-top': '0px'});\n   };\n \n    $('.selling-points .point').hover(onHoverAction, offHoverAction);\n  });","var albumPicasso={name:\"The Colors\",artist:\"Pablo Picasso\",label:\"Cubism\",year:\"1881\",albumArtUrl:\"/images/album-placeholder.png\",songs:[{name:\"Blue\",length:\"4:26\"},{name:\"Green\",length:\"3:14\"},{name:\"Red\",length:\"5:01\"},{name:\"Pink\",length:\"3:21\"},{name:\"Magenta\",length:\"2:15\"}]},albumMarconi={name:\"The Telephone\",artist:\"Guglielmo Marconi\",label:\"EM\",year:\"1909\",albumArtUrl:\"/images/album-placeholder.png\",songs:[{name:\"Hello, Operator?\",length:\"1:01\"},{name:\"Ring, ring, ring\",length:\"5:01\"},{name:\"Fits in your pocket\",length:\"3:21\"},{name:\"Can you hear me now?\",length:\"3:14\"},{name:\"Wrong phone number\",length:\"2:15\"}]},currentlyPlayingSong=null,createSongRow=function(n,a,e){var t='<tr>  <td class=\"song-number col-md-1\" data-song-number=\"'+n+'\">'+n+'</td>  <td class=\"col-md-9\">'+a+'</td>  <td class=\"col-md-2\">'+e+\"</td></tr>\",l=$(t),r=function(n){var a=$(this).find(\".song-number\"),e=a.data(\"song-number\");e!==currentlyPlayingSong&&a.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>')},u=function(a){var e=$(this).find(\".song-number\");n!==currentlyPlayingSong&&e.html(n)},o=function(n){var a=$(this).data(\"song-number\");if(null!==currentlyPlayingSong){var e=$('.song-number[data-song-number=\"'+currentlyPlayingSong+'\"]');e.html(currentlyPlayingSong)}currentlyPlayingSong!==a?($(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>'),currentlyPlayingSong=a):currentlyPlayingSong===a&&($(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>'),currentlyPlayingSong=null)};return l.find(\".song-number\").click(o),l.hover(r,u),l},changeAlbumView=function(n){var a=$(\".album-title\");a.text(n.name);var e=$(\".album-artist\");e.text(n.artist);var t=$(\".album-meta-info\");t.text(n.year+\" on \"+n.label);var l=$(\".album-image img\");l.attr(\"src\",n.albumArtUrl);var r=$(\".album-song-listing\");r.empty();for(var u=n.songs,o=0;o<u.length;o++){var m=u[o],s=createSongRow(o+1,m.name,m.length);r.append(s)}},updateSeekPercentage=function(n,a){var e=n.width(),t=a.pageX-n.offset().left,l=t/e*100;l=Math.max(0,l),l=Math.min(100,l);var r=l+\"%\";n.find(\".fill\").width(r),n.find(\".thumb\").css({left:r})},setupSeekBars=function(){$seekBars=$(\".player-bar .seek-bar\"),$seekBars.click(function(n){updateSeekPercentage($(this),n)}),$seekBars.find(\".thumb\").mousedown(function(n){var a=$(this).parent();a.addClass(\"no-animate\"),$(document).bind(\"mousemove.thumb\",function(n){updateSeekPercentage(a,n)}),$(document).bind(\"mouseup.thumb\",function(){a.addClass(\"no-animate\"),$(document).unbind(\"mousemove.thumb\"),$(document).unbind(\"mouseup.thumb\")})})};document.URL.match(/\\/album.html/)&&$(document).ready(function(){changeAlbumView(albumPicasso),setupSeekBars()});","var albumPicasso={name:\"The Colors\",artist:\"Pablo Picasso\",label:\"Cubism\",year:\"1881\",albumArtUrl:\"/images/album-placeholder.png\",songs:[{name:\"Blue\",length:163.38,audioUrl:\"/music/placeholders/blue\"},{name:\"Green\",length:105.66,audioUrl:\"/music/placeholders/green\"},{name:\"Red\",length:270.14,audioUrl:\"/music/placeholders/red\"},{name:\"Pink\",length:154.81,audioUrl:\"/music/placeholders/pink\"},{name:\"Magenta\",length:375.92,audioUrl:\"/music/placeholders/magenta\"}]},blocJams=angular.module(\"BlocJams\",[\"ui.router\"]);blocJams.config([\"$stateProvider\",\"$locationProvider\",function(e,n){n.html5Mode(!0),e.state(\"collection\",{url:\"/collection\",controller:\"Collection.controller\",templateUrl:\"/templates/collection.html\"}),e.state(\"landing\",{url:\"/\",controller:\"Landing.controller\",templateUrl:\"/templates/landing.html\"}),e.state(\"song\",{url:\"/song\",templateUrl:\"/templates/song.html\"}),e.state(\"album\",{url:\"/album\",templateUrl:\"/templates/album.html\",controller:\"Album.controller\"})}]),blocJams.controller(\"Landing.controller\",[\"$scope\",function(e){e.subText=\"Turn the music up!\",e.subTextClicked=function(){e.subText+=\"!\"},e.albumURLs=[\"/images/album-placeholders/album-1.jpg\",\"/images/album-placeholders/album-2.jpg\",\"/images/album-placeholders/album-3.jpg\",\"/images/album-placeholders/album-4.jpg\",\"/images/album-placeholders/album-5.jpg\",\"/images/album-placeholders/album-6.jpg\",\"/images/album-placeholders/album-7.jpg\",\"/images/album-placeholders/album-8.jpg\",\"/images/album-placeholders/album-9.jpg\"]}]),blocJams.controller(\"Song.controller\",[\"$scope\",function(e){e.title=\"Song Template\"}]),blocJams.controller(\"Collection.controller\",[\"$scope\",\"SongPlayer\",function(e,n){e.albums=[];for(var l=0;33>l;l++)e.albums.push(angular.copy(albumPicasso));e.playAlbum=function(e){n.setSong(e,e.songs[0])}}]),blocJams.controller(\"Album.controller\",[\"$scope\",\"SongPlayer\",function(e,n){e.album=angular.copy(albumPicasso);var l=null;e.onHoverSong=function(e){l=e,console.log(\"on\")},e.offHoverSong=function(e){l=null,console.log(\"off\")},e.getSongState=function(e){return e===n.currentSong&&n.playing?\"playing\":e===l?\"hovered\":\"default\"},e.playSong=function(l){n.setSong(e.album,l)},e.pauseSong=function(e){n.pause()}}]),blocJams.controller(\"PlayerBar.controller\",[\"$scope\",\"SongPlayer\",function(e,n){e.songPlayer=n,n.onTimeUpdate(function(n,l){e.$apply(function(){e.playTime=l})})}]),blocJams.service(\"SongPlayer\",[\"$rootScope\",function(e){var n=null,l=function(e,n){return e.songs.indexOf(n)};return{currentSong:null,currentAlbum:null,playing:!1,play:function(){this.playing=!0,n.play()},pause:function(){this.playing=!1,n.pause()},next:function(){var e=l(this.currentAlbum,this.currentSong);e++,e>=this.currentAlbum.songs.length&&(e=0);var n=this.currentAlbum.songs[e];this.setSong(this.currentAlbum,n)},previous:function(){var e=l(this.currentAlbum,this.currentSong);e--,0>e&&(e=this.currentAlbum.songs.length-1);var n=this.currentAlbum.songs[e];this.setSong(this.currentAlbum,n)},seek:function(e){n&&n.setTime(e)},onTimeUpdate:function(n){return e.$on(\"sound:timeupdate\",n)},setSong:function(l,o){n&&n.stop(),this.currentAlbum=l,this.currentSong=o,n=new buzz.sound(o.audioUrl,{formats:[\"mp3\"],preload:!0}),n.bind(\"timeupdate\",function(n){e.$broadcast(\"sound:timeupdate\",this.getTime())}),this.play()}}}]),blocJams.directive(\"slider\",[\"$document\",function(e){var n=function(e,n){var l=n.pageX-e.offset().left,o=e.width(),t=l/o;return t=Math.max(0,t),t=Math.min(1,t)},l=function(e,n){return\"number\"==typeof e?e:\"undefined\"==typeof e?n:\"string\"==typeof e?Number(e):void 0};return{templateUrl:\"/templates/directives/slider.html\",replace:!0,restrict:\"E\",scope:{onChange:\"&\"},link:function(o,t,a){o.value=0,o.max=100;var r=$(t);console.log(a),a.$observe(\"value\",function(e){o.value=l(e,0)}),a.$observe(\"max\",function(e){o.max=l(e,100)||100});var u=function(){var e=o.value||0,n=o.max||100;return percent=e/n*100,percent+\"%\"};o.fillStyle=function(){return{width:u()}},o.thumbStyle=function(){return{left:u()}},o.onClickSlider=function(e){var l=n(r,e);o.value=l*o.max,notifyCallback(o.value)},o.trackThumb=function(){e.bind(\"mousemove.thumb\",function(e){var t=n(r,e);o.$apply(function(){o.value=t*o.max,l(o.value)})}),e.bind(\"mouseup.thumb\",function(){e.unbind(\"mousemove.thumb\"),e.unbind(\"mouseup.thumb\")});var l=function(e){\"function\"==typeof o.onChange&&o.onChange({value:e})}}}}}]),blocJams.filter(\"timecode\",function(){return function(e){if(e=Number.parseFloat(e),Number.isNaN(e))return\"-:--\";var n=Math.floor(e),l=Math.floor(n/60);remainingSeconds=n%60;var o=l+\":\";return 10>remainingSeconds&&(o+=\"0\"),o+=remainingSeconds}});","var tabsContainer=\".user-profile-tabs-container\",selectTabHandler=function(e){$tab=$(this),$(tabsContainer+\" li\").removeClass(\"active\"),$tab.parent().addClass(\"active\"),selectedTabName=$tab.attr(\"href\"),console.log(selectedTabName),$(\".tab-pane\").addClass(\"hidden\"),$(selectedTabName).removeClass(\"hidden\"),e.preventDefault()};document.URL.match(/\\/profile.html/)&&$(document).ready(function(){var e=$(tabsContainer+\" a\");e.click(selectTabHandler),e[0].click()});","var tabsContainer = \".user-profile-tabs-container\"\n var selectTabHandler = function(event) {\n   $tab = $(this);\n   $(tabsContainer + \" li\").removeClass('active');\n   $tab.parent().addClass('active');\n   selectedTabName = $tab.attr('href');\n   console.log(selectedTabName);\n   $(\".tab-pane\").addClass('hidden');\n   $(selectedTabName).removeClass('hidden');\n   event.preventDefault();\n };\n\n \n if (document.URL.match(/\\/profile.html/)) {\n   $(document).ready(function() {\n     var $tabs = $(tabsContainer + \" a\");\n     $tabs.click(selectTabHandler);\n     $tabs[0].click();\n   });\n }"]}